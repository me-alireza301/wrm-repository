<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<bean id="sessionFactory" parent="abstractSessionFactory">
		<property name="configLocations">
			<list>
				<value>
					classpath:pe/com/sgp/config/support-hibernate.cfg.xml
				</value>
			</list>
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--  HINT: This class is often used with parent / child bean definitions.
		Typically, you will define the transaction manager and default transaction attributes (for method name patterns) 
		in an abstract parent bean definition, deriving concrete child bean definitions for specific target objects.
		This reduces the per-bean definition effort to a minimum.
	-->

	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
	            <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

</beans>